class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        
        int n = matrix.size();
        int m = matrix[0].size();
        
        int arr[n][m];
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(matrix[i][j] == '1')
                    arr[i][j] = 1;
                
                else
                    arr[i][j] = 0;
            }
        }
              int dp[n][m];
    
    for(int i =0; i<n; i++)
    dp[i][0] = arr[i][0];
    
    for(int j=0;j<m;j++)
    dp[0][j] = arr[0][j];
    
    int result = 0;
    
    for(int i=1;i<n;i++)
    {
        for(int j =1; j<m; j++)
        {
            if(arr[i][j] > 0)
            {
                if(arr[i-1][j-1] == 0)
                {
                    dp[i][j] = arr[i][j];
                }
                
                else
                {
                int side = dp[i-1][j-1] + 1;
                
                bool rowFlag = false;
                int up = 0;
                
               for(int k = i; side != 0; k--)
               {
                   if(arr[k][j] == 0)
                   {
                       rowFlag = true;
                       break;
                   }
                   up++;
                   side--;
               }
               
               bool colFlag = false;
               side = dp[i-1][j-1] + 1;
               int left = 0;
               
               for(int k = j; side != 0; k--)
               {
                   if(arr[i][k] == 0)
                   {
                       colFlag = true;
                       break;
                   }
                   side--;
                   left++;
               }
               
               if(rowFlag == false && colFlag == false)
               dp[i][j] = dp[i-1][j-1] + 1;
               
               else
               dp[i][j] = min(left,up);
               
            //   result = max(result, dp[i][j]);
                }
            }
            
            else
            dp[i][j] = arr[i][j];
        }
    }
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            result = max(result, dp[i][j]);
        }
    }
    
    return result*result;
        
    }
};